local unix_script = [[
    url="{URL}"
    output_path="{OUTPUT_PATH}"

    echo "downloading $url to $output_path"

    if command -v curl >/dev/null 2>&1; then
        http_code=$(curl -L --url "$url" --output "$output_path" -w "%{http_code}")
        error_code=$?
        if [ "$http_code" != "200" ]; then
            error_code=1
        fi
    elif command -v wget >/dev/null 2>&1; then
        wget --server-response -O "$output_path" "$url"
        error_code=$?
    else
        echo "unable to find wget or curl" 
        exit 1
    fi

    if [ $error_code -ne 0 ]; then
        echo "wget or curl failed with exit code $error_code" 
        echo $output_path
        echo $url
        rm "$output_path"
        exit 1
    fi
]]
local windows_script = [[
:DownloadFile
SetLocal
	set url=%~1
	set output_path=%~2

	if "%windir%" == "C:\ReactOS" (
		echo "!url!"
		echo "!output_path!"
		dwnl "!url!" "!output_path!"
	) else (
		if not exist !SystemRoot!\System32\where.exe (
			set tmp_name=!TEMP!\lua_one_click_jscript_download.js
			del /F !tmp_name! 2>NUL
			echo //test > !tmp_name!

			if not exist !tmp_name! (
				call:AlertBox "unable to create temp file !tmp_name! !" "error"
				exit /b
			)

			set forward_slash_path=!output_path:\=/!

			echo try { >> !tmp_name!
			echo var req = new ActiveXObject^("Microsoft.XMLHTTP"^) >> !tmp_name!
			echo req.Open^("GET","!HTTP_TUNNEL!!url!",false^) >> !tmp_name!
			echo req.Send^(^) >> !tmp_name!

			echo var stream = new ActiveXObject^("ADODB.Stream"^) >> !tmp_name!
			echo stream.Type = 1 >> !tmp_name!
			echo stream.Open^(^) >> !tmp_name!
			echo stream.Write^(req.responseBody^) >> !tmp_name!
			echo stream.SaveToFile^("!forward_slash_path!", 2^) >> !tmp_name!
			echo stream.Close^(^) >> !tmp_name!
			echo } catch^(err^) { >> !tmp_name!
			echo 	WScript.Echo^("jscript error: "+err.description^) >> !tmp_name!
			echo 	WScript.Quit^(1^) >> !tmp_name!
			echo } >> !tmp_name!

			cscript /Nologo /E:JScript !tmp_name!

			if !errorlevel! neq 0 (
				call:AlertBox "failed to execute JScript to download file" "error"
				goto:eof
			)

			del /F !tmp_name! 2>NUL

		) else (
			where curl
			if !errorlevel! equ 0 (
				curl -L --url "!url!" --output "!output_path!"

				if !errorlevel! neq 0 (
					call:AlertBox "curl failed to execute with error code !errorlevel!" "error"
				)

				goto:eof
			) else (
				where powershell
				if !errorlevel! equ 0 (
					PowerShell -NoLogo -NoProfile -NonInteractive "(New-Object System.Net.WebClient).DownloadFile('!url!','!output_path!')"

					if !errorlevel! neq 0 (
						call:AlertBox "powershell failed to execute with error code !errorlevel!" "error"
					)

					goto:eof
				)
			)

			call:AlertBox "unable to find curl or powershell"
			exit /b
		)
	)
EndLocal
goto:eof

call:DownloadFile "{FROM}" "{TO}"
]]

local function fetch(url: string, output_path: string)
	local script

	if jit.os == "Windows" then
		script = windows_script
	else
		script = unix_script
	end

	script = script:gsub("%{URL%}", url)
	script = script:gsub("%{OUTPUT_PATH%}", output_path)
	print("downloading ", url, " to ", output_path)
	os.execute(script)
end

return fetch